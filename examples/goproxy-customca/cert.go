package main

import (
	"crypto/tls"
	"crypto/x509"

	"github.com/elazarl/goproxy"
)

var caCert = []byte(`-----BEGIN CERTIFICATE-----
MIIDoTCCAomgAwIBAgIGDiScnLC0MA0GCSqGSIb3DQEBCwUAMCgxEjAQBgNVBAMM
CW1pdG1wcm94eTESMBAGA1UECgwJbWl0bXByb3h5MB4XDTE5MDQxMDAzNDgzMloX
DTIyMDQxMTAzNDgzMlowKDESMBAGA1UEAwwJbWl0bXByb3h5MRIwEAYDVQQKDAlt
aXRtcHJveHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDNQExCo8Ln
vo1xeAPDk4EwuLMPeXEx4XRl/gKtOEGGvLMNontblW7sXNWKFfkC5a2C+fpF9WP1
HQbCCYH2FkciQepyVu8x8xiu8wDaExj2DFrkykhVeJF8exvsRUlaw1aKamp+/JVd
zWnXhl/LDKacyxeJr8PyhPqhQT1/M/7XSWHn7l/mdkVaEqjryJV1WVaTehh63BOm
6Q8HQiDYNasTNltU1DJ+HI+4nnhic9192B5zO7Pmn+wnOfLgyx65IkP3/0eXEIG9
jvwhcOn8RmUV/MgsAjkvqGrYf8hsA+QVGV9NAlZjxJuMyinyjCmIG7rQBGkN8lZQ
NMS7nB4yDd+PAgMBAAGjgdAwgc0wDwYDVR0TAQH/BAUwAwEB/zARBglghkgBhvhC
AQEEBAMCAgQweAYDVR0lBHEwbwYIKwYBBQUHAwEGCCsGAQUFBwMCBggrBgEFBQcD
BAYIKwYBBQUHAwgGCisGAQQBgjcCARUGCisGAQQBgjcCARYGCisGAQQBgjcKAwEG
CisGAQQBgjcKAwMGCisGAQQBgjcKAwQGCWCGSAGG+EIEATAOBgNVHQ8BAf8EBAMC
AQYwHQYDVR0OBBYEFMTb1UZ1jqAB57F5RAzFA0+8ndwOMA0GCSqGSIb3DQEBCwUA
A4IBAQBcpNHTH19hyoNnz1YmOZ5ki6z96w0UI1uSIWGQ9boqs/U/feU1lIe/Zswb
yg0V+dU/ChtBJ4nBf88p6Zjmh88UoTkTGFh/cnPeA9sVDC3KMVPgTeg8cl8D8Re4
XLAG4pwdfAUg9/3O2lU3Z7DjX8BKcivt/cendJtN5D1jFnpJjFV3TKjxD3/3yP2Y
dNEHcNUWgF3RnkcjPzonUg/UN2GXkTGvsJO107QWwvhvUs65adcvwK5B4Nk+GR0v
BBsziGFkmPMbVPDraK100BdGbYATVZ+PAFKliQ8yP0f3QUXaZhe1w3jjFnbowq07
BONueUbCG2UOuTv5EIwH3PlZQjNd
-----END CERTIFICATE-----`)

var caKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDNQExCo8Lnvo1x
eAPDk4EwuLMPeXEx4XRl/gKtOEGGvLMNontblW7sXNWKFfkC5a2C+fpF9WP1HQbC
CYH2FkciQepyVu8x8xiu8wDaExj2DFrkykhVeJF8exvsRUlaw1aKamp+/JVdzWnX
hl/LDKacyxeJr8PyhPqhQT1/M/7XSWHn7l/mdkVaEqjryJV1WVaTehh63BOm6Q8H
QiDYNasTNltU1DJ+HI+4nnhic9192B5zO7Pmn+wnOfLgyx65IkP3/0eXEIG9jvwh
cOn8RmUV/MgsAjkvqGrYf8hsA+QVGV9NAlZjxJuMyinyjCmIG7rQBGkN8lZQNMS7
nB4yDd+PAgMBAAECggEAW3CyyNmGQpJdF1kdbCsx2g/fDhzPdiZ4IdwpOxyd7LXy
mzdw95s6YKj3JV6mokjKpVhSzIoHbzLwSM/Ni2HfbP6qwSfDxqADtiViksUBUNSu
RdFsqk9dmXSLOxafGIV/74h7S3mh3ble1vrxgFdxftbn9JpOlKPzuJWFHT9/4E7v
soUGXIuyAoAH6XLz0OxQYFJQkZxBdH13DpfJNXfsHQjG7JC//8mEt7uMRMFRNwYf
BaUPTmIGH8CvZ11YZDRE/bsvxbmzcp5Nj1I1ZUeBLO80Pswcl8ZlTrO4jDMCcUvH
7kB94EKaJEsWbk78XBX7vKXSUvDwA9BbS6PlEk7ESQKBgQDrgjnpS8GJOwvPRSwM
FEOEeZRPIKFIAA87LxOos5MUsjeXMaKskgSXvviuOpol6hMCc65mybcJ1sud/4Tx
twvYgonvhrRip8ousYU1YLLAzyVwEX1hs7D+i15jEbMHmRSAxwfm5i6EMaLebush
Qv7K2RgTVWTuPy7xF8dlaC6hEwKBgQDfHBvLpi7OozaP6pLYfEYTyR7ZjDM+5GK1
iGuRD0HscjmtyyXW1C/9FbG21AphQMcU7usVncC/k8VljCyDke4TjPSC0UvLOY/g
i8ddUVj2TDivaCOcFPW4qUF+UygBYuoJfsIrg6ZKgDkCQP0Hgau3qNbKxHCEKVMQ
M2Nc0ajTFQKBgQCULrhphnUb978Sh5+Tahyhei5LK2jPeNocjx57g6ID368CvwRw
OOAS6uJmHhFn0cRsQoV1v24gDrrHi0MHI/mcHWbVA5j0ika44pHCaDmQ/8W6ogaW
Nw4i22ZkR3qySSuRa6oZKrQSEXk9I+VmZFUVJUv0vkJndfH/WMrpj4fnaQKBgBXR
gOJcgQ1SJr7SOMQU+yFqNKsfq89FtGV+Ts6jyFWgIgXd7PhiTcMZQQTZHZ6/H/jr
GHBHuhbCE7bHi37eYYLl8O9uGlRob6qM4NU+ZE3JzG1S6NCVuCXz32TEKxBfpPWC
wOhSeoukmG6g/l2ij7FpQIAZz8sM44OdEuV711+1AoGBALNHZ9gACdmd4zVUpDPl
yPrRZ6mYZo2pvGN9fvk7gY22vQIc9q4QS6DKiMXRwQ7/MRpavTfffDrDxEja8TmR
KM+/DckZzeIRAE6P2pZC8TFU916HawBq6rtbH4jrLJdu5xojOxgoMKy7cpN2tfAE
SV1YROnH8njO9UvnRtMa/j8D
-----END RSA PRIVATE KEY-----`)

func setCA(caCert, caKey []byte) error {
	goproxyCa, err := tls.X509KeyPair(caCert, caKey)
	if err != nil {
		return err
	}
	if goproxyCa.Leaf, err = x509.ParseCertificate(goproxyCa.Certificate[0]); err != nil {
		return err
	}
	goproxy.GoproxyCa = goproxyCa
	goproxy.OkConnect = &goproxy.ConnectAction{Action: goproxy.ConnectAccept, TLSConfig: goproxy.TLSConfigFromCA(&goproxyCa)}
	goproxy.MitmConnect = &goproxy.ConnectAction{Action: goproxy.ConnectMitm, TLSConfig: goproxy.TLSConfigFromCA(&goproxyCa)}
	goproxy.HTTPMitmConnect = &goproxy.ConnectAction{Action: goproxy.ConnectHTTPMitm, TLSConfig: goproxy.TLSConfigFromCA(&goproxyCa)}
	goproxy.RejectConnect = &goproxy.ConnectAction{Action: goproxy.ConnectReject, TLSConfig: goproxy.TLSConfigFromCA(&goproxyCa)}
	return nil
}
